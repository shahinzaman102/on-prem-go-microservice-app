Note: - We can set the Visibility to "Masked" to hide the variable which will avoid printing the variable to the ci/cd pipeline logs.
      - If we keep the Visibility as default selected which is "Visible", then it can be revealed to the ci/cd pipeline logs.
	      but when "Visible" if the project is Private then there's shouldn't be any issue.
	  - And if we find issue to "Masked" the variable, then we can increase the character length to 8 or more..
	  - The variables which are used - most of them are the default credentials for the respective services - so we'll have to be careful - 
	    when we want to change any variable "Key" or "Value" from here below - we can get access issue later after port-forwarding...

------------------------------------------------------

MAIL_PASSWORD : password

MAIL_USERNAME : johnsmith

MONGO_INITDB_ROOT_PASSWORD : password

MONGO_INITDB_ROOT_USERNAME : admin

PGADMIN_PASSWORD : admin

PGADMIN_USER : admin@example.com

POSTGRES_DB : users

POSTGRES_PASSWORD : password

POSTGRES_USER : postgres

USER_EMAIL : admin@example.com

USER_PASSWORD : use the "Base64 encode" form of the below password : 
				$2a$12$VRLXlUBh37GbVTHGg2O5mOGnyrIBoj9h9g5ENOMQ8yut8sQO1BNcC
				
				Note: 
				- This is the bcrypt-hashed form of the password: admin123.
				  The original password admin123 is used in the application to auto-fill the 
				  login form and trigger authentication when the "Test Auth" button is clicked.
				- We got this bcrypt-hashed form of the password: admin123 using this command: 
					htpasswd -nbBC 12 "" "admin123" | sed 's/$2y/$2a/'

To encode the "USER_PASSWORD" in Base64 :

	- In Terminal ðŸ¡ª 

		echo -n '$2a$12$VRLXlUBh37GbVTHGg2O5mOGnyrIBoj9h9g5ENOMQ8yut8sQO1BNcC' | base64

	- Weâ€™ll get something like in output ðŸ¡ª

		JDJhJDEyJFZSTFhsVUJoMzdHYlZUSEdnMk81bU9HbnlySUJvajloOWc1RU5PTVE4eXV0OHNRTzFCTmND
	
	- Then, Set this "output" as the "Value" for the "Key: USER_PASSWORD" in CI/CD.
