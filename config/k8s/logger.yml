apiVersion: apps/v1
kind: Deployment
metadata:
  name: logger-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logger-service
  template:
    metadata:
      labels:
        app: logger-service
    spec:
      containers:
      - name: logger-service
        image: logger-service:$IMAGE_TAG
        imagePullPolicy: Never
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "250m"
        env:
          - name: JAEGER_ENDPOINT
            value: "http://jaeger:4318"
        ports:
          - containerPort: 80
          - containerPort: 5001
          - containerPort: 50001
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: logger-service
  labels:
    app: logger-service
    release: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8082"
spec:
  selector:
    app: logger-service
  ports:
    - protocol: TCP
      name: web-port
      port: 80
      targetPort: 80
    - protocol: TCP
      name: rpc-port
      port: 5001
      targetPort: 5001
    - protocol: TCP
      name: grpc-port
      port: 50001
      targetPort: 50001
    - protocol: TCP
      name: metrics-port # metrics port
      port: 8082
      targetPort: 8082
  type: ClusterIP
