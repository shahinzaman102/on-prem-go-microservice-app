apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: fix-init-script-permissions
          image: busybox
          command:
            - sh
            - -c
            - |
              echo "Listing files in /docker-entrypoint-custom.d:"
              ls -al /docker-entrypoint-custom.d
              if [ -f /docker-entrypoint-custom.d/init.sh ]; then
                echo "init.sh found, copying to /tmp/init.sh"
                cp /docker-entrypoint-custom.d/init.sh /tmp/init.sh && chmod +x /tmp/init.sh;
              else
                echo "init.sh not found in /docker-entrypoint-custom.d" && exit 1;
              fi
          volumeMounts:
            - mountPath: /docker-entrypoint-custom.d
              name: custom-init-scripts
            - mountPath: /tmp
              name: custom-init-scripts-tmp
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"

      containers:
        - name: postgres
          image: postgres:14.0
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_DB
            - name: PGDATA
              value: "/var/lib/postgresql/data_new"  # Forces a fresh initialization
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
            - mountPath: /docker-entrypoint-initdb.d
              name: postgres-init-scripts
            - mountPath: /tmp
              name: custom-init-scripts-tmp
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "250m"
          command: ["/bin/bash", "-c", "docker-entrypoint.sh postgres && /tmp/init.sh"]

        - name: postgres-exporter
          image: prometheuscommunity/postgres-exporter:latest
          ports:
            - containerPort: 9187  # Default metrics port
          env:
            - name: DATA_SOURCE_NAME
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)?sslmode=disable"
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"

      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: postgres-init-scripts
          configMap:
            name: postgres-init-scripts
        - name: custom-init-scripts
          configMap:
            name: postgres-custom-init
        - name: custom-init-scripts-tmp
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
    release: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9187"
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      name: main-port
      port: 5432
      targetPort: 5432
    - protocol: TCP
      name: metrics-port
      port: 9187
      targetPort: 9187  # Exposing metrics
  type: ClusterIP
